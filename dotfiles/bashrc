# ~/.bashrc: executed by bash(1) for non-login shells.

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=2000000
HISTFILESIZE=4000000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# update history after each execution
shopt -s histappend
PROMPT_COMMAND="history -a;$PROMPT_COMMAND"

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Git completion
if [ ! -f ~/bin/git-prompt.sh ]; then
    mkdir -p ~/bin/;
    curl -o ~/bin/git-prompt.sh https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh;
fi
source ~/bin/git-prompt.sh;

if [ ! -f ~/bin/git-completion.bash ]; then
    mkdir -p ~/bin/;
    curl -o ~/bin/git-completion.bash https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash;
fi
source ~/bin/git-completion.bash

export GIT_PS1_SHOWDIRTYSTATE=1

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/$HOME/~}\007"'
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias du1='du --max-depth=1'
alias ssh-remember='eval `ssh-agent`; ssh-add'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

#if [ -f ~/.bash_aliases ]; then
#    . ~/.bash_aliases
#fi

# enable color support of ls and also add handy aliases
if [ "$TERM" != "dumb" ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    alias dir='ls --color=auto --format=vertical'
    alias vdir='ls --color=auto --format=long'
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# For cscope
export CSCOPE_EDITOR=gvim
export EDITOR=vim

echo -ne "\nYou" ;
echo -ne "\033[33m should";
echo -ne "\033[32m be"
echo -e "\033[31m working.\n"


PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
PATH=$HOME/bin:$HOME/prog/bin:$HOME/bin/bin/:$PATH
PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/local/bin:$PATH

brewPresent=type brew >/dev/null 2>&1;
if [[ "$brewPresent" && "-f $(brew --prefix)/etc/bash_completion" ]]; then
    . $(brew --prefix)/etc/bash_completion
fi

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_CTYPE=''
export CLICOLOR=1
export GOPATH="$HOME/gocode"

alias mvim=gvim
alias zflux='xflux -l 46.5 -g 8.6'

# Load z.sh, if it exists.
[ -f ~/.local/z/z.sh ] && source ~/.local/z/z.sh;

# Load nvm, if it exists.
[ -s $HOME/.nvm/nvm.sh ] && . $HOME/.nvm/nvm.sh # This loads NVM

# Check whether this is a ssh session, screen session, or a tmux session, and
# append a message to the prompt
SESSION_TYPE=local
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  SESSION_TYPE=remote/ssh
else
  case $(ps -o comm= -p $PPID) in
    sshd|*/sshd) SESSION_TYPE=remote/ssh;;
  esac
fi

SUFFIX=""
if [ "$SESSION_TYPE" != "local" ]; then
    SUFFIX="${SUFFIX}(ssh session)";
fi

if [ -n "$STY" ]; then
    SUFFIX="${SUFFIX}(screen)";
fi

if [ -n "$TMUX" ]; then
    SUFFIX="${SUFFIX}(tmux)";
fi

# Define the prompt
PS1='\[\033[00;35m\][\A] ${debian_chroot:+($debian_chroot)} \[\033[01;32m\]\u@\h\[\033[00m\] \[\033[01;31m\]${SUFFIX}\[\033[00m\]:\[\033[01;38m\]\w\[\033[00m\]$(__git_ps1 " (%s)")\n\$ '

# Ruby in the path
if which ruby >/dev/null && which gem >/dev/null; then
    PATH="$(ruby -e 'puts Gem.user_dir')/bin:$PATH"
fi

# Load fuzzy file matcher
[ -f ~/bin/.fzf.bash ] && source ~/.fzf.bash

# Activate torch
[ -f ~/torch/install/bin/torch-activate ] && . ~/torch/install/bin/torch-activate

# add miniconda to bashrc
export PATH=$PATH:~/miniconda3/bin
